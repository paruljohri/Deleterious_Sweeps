c	Written by Brian Charlesworth
c	program to calculate recurrent sweep effects for weakly selected,deleterious   	nonsynonymous mutations
c	random mating and semidominance are assumed
c	includes summation and integration results
c	thins the number of synonymous sites
c	includes correction for sweep duration
c	incorporates BGS effects (B) that vary with recombination rate
c	allows correction factor for B
c	corrects for coalescence during sweep using C1 and C2 methods
c	integrations use Simpson's Rule
c	takes means across synonymous sites

	character*20 FOUT,FIN
	
	real gama(50),pi,rec,gcr,dg,gama1,Corrset(50),C,adrate1a(50),adrate1b(50)
	real rec1,rec2,SN11,SN21,SN31,SN41,SN51,SN61,TSE,B1,recset(50),Bset(50),Ks
	real SNSE1(50),SNSE2(50),SNSE3(50),SNSE4(50),SNSE5(50),SNSE6(50),SNSE7(50)
	real STE1,STE2,STE3,Tda(50),adrate1(50),adrate(50),adrates,TSE12,psw(50)
	real X1(5000),X2(5000),X3(5000),X4(5000),STd1(50),AIE,pirele1,pirele2
	real X5(5000),X6(5000),Pr,pirel0,pirel1,pirel2,pirelm0,pirelm1,adrate1bS
	real X2a(5000,50),X3a(5000,50),X5a(5000,50),X6a(5000,50),Tda1,PNCS1,intfac,NT,NE,PNCS(50)
	
	integer nex,nmax1,icode(5000),nsyn
	
	common nsimp,h,F1,g,dg,lint,nbp,ithin,lex

	WRITE (9,*) 'Input file?'
  	READ (9,*) FIN
  	WRITE (9,*) 'Output file?'
  	READ (9,*) FOUT
	WRITE (9,*) ''
	
	OPEN (2,FILE=FIN)
	OPEN (1,FILE=FOUT)
	
	READ (2,*) NT
	READ(2,*)  fsel
	READ(2,*)  gam1
	READ (2,*) nselsit
	READ (2,*) pexa
	READ (2,*) pi
	READ (2,*) nex,lex
	READ (2,*) lint
	READ (2,*) rec
	READ (2,*) gcr,dg
	READ (2,*) ndat
	
	WRITE (9,*) 'Interference factor?'
	READ (9,*) intfac
c	intfac=1 if there is no adjustment for interference between selected alleles

	WRITE (9,*) 'Thinning factor?'
	READ (9,*) ithin
c	ithin=1 if there is no thinning of synonymous sites in sweep calculations

	WRITE (9,*) 'Number of terms in series limit ?'
	READ (9,*) nmax1
		
	WRITE (9,*) 'Number of points for Simpsons Rule'
	READ (9,*) nsimp
	
	h=0.5
	F1=0.0
	NE=NT		
													
	WRITE (1,*) 'Program to calculate recurrent weakly selected NS sweep effects with BGS'
	WRITE (1,*) 'Includes correction for sweep durations'
	WRITE (1,*) 'Correction for effect of BGS on sweeps allowed'
	WRITE (1,*) 'Full formulae allowing coalescence and recombination during sweeps'
	WRITE (1,*) 'Uses C1 and C2 methods'
	WRITE (1,*) 'Gives means for each site for C2 method'
	WRITE (1,*) ''
	WRITE (1,*) 'Population size= ',NT
	WRITE (1,*) 'Effective population size= ',NE
	WRITE (1,*) 'Proportion of NS mutations in weak selection range= ',fsel
	WRITE (1,*) 'Lower gamma value= ',gam1
	WRITE (1,*) 'Number of gamma values modelled= ',nselsit
	WRITE (1,*) 'Proportion of exonic sites under selection= ',pexa
	a=0.5
	b=0.0
	WRITE(1,*) ''
	WRITE (1,*) 'Neutral diversity= ',pi
	WRITE (1,*) 'Crossing over rate= ',rec
	WRITE (1,*) 'Gene conversion rate= ',gcr,' mean tract length =',dg
	WRITE (1,*) ''
	WRITE (1,*) 'Number of exons= ',nex,' Length of exons (in codons) = ',lex
	alcs1=3*lex*nex
	WRITE (1,*) 'Coding sequence length= ',alcs1
	WRITE (1,*) 'Intron length= ',lint
	WRITE (1,*) ''
	WRITE (1,*) 'Interference factor= ',intfac
	WRITE (1,*) 'Thinning factor= ',ithin
	WRITE (1,*) 'Number of points for Simpsons rule= ',nsimp
	WRITE (1,*) 'Number of terms in series limit= ',nmax1
	WRITE (1,*) ''
	
	WRITE (9,*) 'Fixation index= ',F1
	WRITE (1,*) 'Proportion of NS mutations in weak selection range= ',fsel
	WRITE (1,*) 'Number of gamma values modelled= ',nselsit
	WRITE (9,*) 'Proportion of exonic sites under selection= ',pexa
	WRITE (9,*) 'Dominance coefficient= ',h
	WRITE (9,*) ''
	WRITE (9,*) 'neutral diversity= ',pi
	WRITE (9,*) 'crossing over rate= ',rec
	WRITE (9,*) 'gene conversion rate= ',gcr,' mean tract length =',dg
	WRITE (9,*) ''
	WRITE (9,*) 'Number of exons= ',nex,' Length of exons= ',lex
	WRITE (9,*) 'Coding sequence length= ',alcs1
	WRITE (9,*) 'Intron length= ',lint
	WRITE (9,*) 'Interference factor= ',intfac
	pause	
	
	rec1=rec			
	nbp=3*nex*lex+(nex-1)*lint
	nselsit1=nselsit-1
	anselsit=nselsit
	anselsit1=nselsit-1

	WRITE(1,*) 'No. of coding sequence bp.= ',nbp
	WRITE(9,*) 'No. of coding sequence bp.= ',nbp
	
	call sitecode(lex,lint,nex,icode)
c	classifies sites in coding sequence

c	end of initial input section

c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	adrates=0.0
	adrate1s=0.0
	fsel=fsel/anselsit
	dgam=(10.0-gam1)/anselsit1
c	factor of anselsit normalizes uniform distribution of NS classes
	
	
	do 400 isel=1,nselsit
	gama(isel)=gam1+(isel-1)*dgam
c	assigns gamma values for NS sweeps
	
	pfNE=gama(isel)/(exp(gama(isel))-1.0)
c	fixation probability of deleterious mutation x coalescent time

	adrate1(isel)=0.5*pi*pfNE*intfac*fsel
c	rate of type isel sweeps per NS site per unit coal. time, not corrected for BGS
c	factor of anselsit give

	adrate(isel)=adrate1(isel)*(3*pexa*nex*lex)
c	rate of type isel sweeps per gene, not corrected for BGS

	adrate1s=adrate1s+adrate1(isel)
	adrates=adrates+adrate(isel)
c	sum of rates of sweeps over classes
	
	WRITE(1,*) ''
	WRITE(9,*) ''
	WRITE(1,*) 'Index for gamma= ',isel,' gamma= ',gama(isel)
	WRITE(1,*) 'Rates of non-adaptive substitutions in absence of BGS (per 2Ne generations)'
	WRITE(1,*) 'Rate of non-adaptive NS substitutions per NS site= ',adrate1(isel)
	WRITE(1,*) 'Rate of non-adaptive substitutions per gene= ',adrate(isel)
	WRITE(9,*) 'Rate of non-adaptive substitutions per gene= ',adrate(isel)
	WRITE(1,*) ''

400 	continue

	WRITE(1,*) 'Overall rate of non-adaptive substitutions per gene= ',adrates
	Ks=2*adrate1s/pi
	WRITE(1,*) 'Predicted mean Ks= ',Ks
	WRITE(1,*) ''
	WRITE(1,*) ''
	
c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx	

	do 5 i1=1,ndat
5	READ(2,*) recset(i1),Bset(i1),Corrset(i1)	
	
	do 100 i2=1,ndat
	rfac=recset(i2)	
	B1=Bset(i2)
	C=Corrset(i2)

	do 160 is1=1,nbp
	do 162 isel4=1,nselsit
	X2a(is1,isel4)=0
	X3a(is1,isel4)=0
	X5a(is1,isel4)=0
162	X6a(is1,isel4)=0
160	continue
c	initialises variables describing net sweep effects for each synonymous site
	
	
	WRITE (9,*) ''
	WRITE (9,*) 'Recombination factor= ',rfac
	WRITE (9,*) 'B1= ',B1,' correction factor for B= ',C	
	WRITE (1,*) 'Recombination factor= ',rfac
	WRITE (1,*) 'B1= ',B1,' correction factor for B= ',C
	WRITE (1,*) ''	
	
	B2=C*B1
c	uses simulation result to correct for effect of sweeps on B
c	C is equivalent to 1/lambda in the paper

	xrate=adrates*B2	
c	total rate of substitutions per gene corrected for BGS

	y=B1*xrate
	if(y.ge.1.00001) then
	S=log(1.0+(1.0/y))
	write(1,*) 'Integral I= ',S
	go to 10
	end if
	
	if(y.ge.0.99999) then
	S=0.6931
	write(1,*) 'Integral I= ',S
	go to 10
	else
	
	call series(nmax1,xrate,S,B1)
	end if
		
10	AIE=B1*S*xrate

	WRITE(1,*) 'Mean recovery factor (B1*omega*I) = ',AIE
	WRITE(1,*) ''
	
c	finishes calculating variables for sweep formulae 
c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	rec2=rec1*rfac*(1-F1)
	g=gcr*(1-F1)
c	recombination parameters corrected for inbreeding coefficient
	
	adrate1aS=0
	adrate1bS=0
	SNSE1S=0
	SNSE3S=0
	SNSE3S=0
	SNSE4S=0
	SNSE5S=0
	SNSE6S=0
	SNSE7S=0
	STd1S=0
c 	initializes sweep variables for sums over synonymous sites and classes of NS sites

	do 410 isel1=1,nselsit
	
	
	gama1=gama(isel1)
	pf1=2*a*gama1*B2/(1-exp(0.0-2*a*gama1*B2))
	pf2=2*(a+b)*gama1*B2/(1-exp(0.0-2*(a+b)*gama1*B2))
	q1=1.0/pf1
	p1=1-q1
	p2=1.0/pf2
	q2=1-p2
c	initial and final allele frequencies of selected NS allele
	write (9,*) ''
	write(9,*) 'Index for gamma= ',isel1,'gamma= ',gama1
	write(9,*) 'Approximate conditional initial and final NS allele frequencies'
	write(9,*) 'q1= ',q1,' q2= ',q2
	write(9,*) 'p1= ',p1,' p2= ',p2
	write(1,*) 'Index for gamma= ',isel1,'gamma= ',gama1
	write(1,*) 'Approximate conditional initial and final NS allele frequencies'
	write(1,*) 'q1= ',q1,' q2= ',q2
	write(1,*) 'p1= ',p1,' p2= ',p2
	write(1,*) ''
	
	c=a+b*q1
	d=a+b
	e=a+b*q2	
	
	G=(log(q2)+log(c)-log(q1)-log(e))/a
	G=G+(log(p1)+log(e)-log(p2)-log(c))/d
	
	A1=((1.0/q1)-1.0)+(b/a)*(log(q1)+log(e)-log(c)-log(q2))
	A1=((A1/a)+G)/(B1*gama1)
	PNCS(isel1)=exp(0.0-A1)
c	probability of no coalescence during NS sweep in absence of recombination

	t1=(log(q2*c)-log(q1*e))/a
	t2=(log(p1*e)-log(p2*c))/d
	Tda(isel1)=(t1+t2)/gama1
c	deterministic fixation time for NS mutations

	Tda1=Tda(isel1)
	PNCS1=PNCS(isel1)
	
	write(1,*) ''
	write(1,*) 'Prob. of no coalescent event during NS sweep, given no recombination= ',PNCS1
	write(1,*) 'Deterministic time to fixation for NS sweep= ',Tda1
	write(1,*) ''
	
        WRITE(9,*) 'Starts calculating summations for current crossing over rate and gamma value'
	
	call sweepn(gama1,rec2,SN11,SN21,SN31,SN41,SN51,SN61,X1,X2,X3,X4,X5,X6,B1,C,Tda1,PNCS1,NE,icode,nsyn)
	
	adrate1a(isel1)=3*B2*adrate1(isel1)*pexa/2.0
c 	adjusts NS substitution rate per site for proportion of coding sites that are NS
c   	this corrects for the fact that 2/3, not pexa, of the coding sites are assigned as NS in sweepn

	adrate1aS=adrate1aS+adrate1a(isel1)
c	sums NS substitution rates per siteover all NS site classes

	adrate1b(isel1)=adrate1a(isel1)*(2*nex*lex)
	adrate1bS=adrate1bS+adrate1b(isel1)
c	substitution rates per gene

	SNSE1(isel1)=adrate1a(isel1)*SN11
	SNSE1S=SNSE1S+SNSE1(isel1)
	WRITE (1,*) 'NS contribution to standard sweep coalescent rate= ',SNSE1(isel1)
	WRITE (1,*) ''
	
	STd1(isel1)=adrate1a(isel1)*PNCS1*SN11*Tda1
	STd1S=STd1S+STd1(isel1)
c	contribution to net coalescent time from cases with no recombination or coalescence during NS sweep
	
	SNSE2(isel1)=adrate1a(isel1)*SN21
	SNSE2S=SNSE2S+SNSE2(isel1)
	WRITE (1,*) 'NS contribution from recombination during NS sweeps= ',SNSE2(isel1)
	WRITE (1,*) ''
	
	SNSE3(isel1)=adrate1a(isel1)*SN31
	SNSE3S=SNSE3S+SNSE3(isel1)
	WRITE (1,*) 'Mean time to coalescence during NS sweeps= ',SNSE3(isel1)
	WRITE (1,*) ''
	
	SNSE4(isel1)=adrate1a(isel1)*SN41
	SNSE4S=SNSE4S+SNSE4(isel1)
	WRITE (1,*) 'Additional net time to coalescence during NS sweeps= ',SNSE4(isel1)
	WRITE (1,*) ''
	
	SNSE5(isel1)=adrate1a(isel1)*SN51
	SNSE5S=SNSE5S+SNSE5(isel1)
	WRITE (1,*) 'Mean time to recombination event during NS sweeps= ',SNSE5(isel1)
	WRITE (1,*) ''
	
	SNSE6(isel1)=adrate1a(isel1)*SN61
	SNSE6S=SNSE6S+SNSE6(isel1)
	WRITE (1,*) 'NS contribution from single rec. event during NS sweeps ',SNSE6(isel1)
	WRITE (1,*) ''
	
	SNSE7(isel1)=SNSE3(isel1)+STd1(isel1)
	SNSE7S=SNSE7S+SNSE7(isel1)
	WRITE (1,*) 'Net mean time to coalescence during NS sweeps= ',SNSE7(isel1)
	WRITE (1,*) ''
c	net mean time to coalescence for NS sweeps

	WRITE (9,*) 'NS contribution to standard sweep coalescent rate= ',SNSE1(isel1)
	WRITE (9,*) 'NS contribution from recombination during NS sweeps= ',SNSE2(isel1)
	WRITE (9,*) 'Net time to coalescence during NS sweeps= ',SNSE3(isel1)
	WRITE (9,*) 'Additional time to coalescence during NS sweeps= ',SNSE4(isel1)
	WRITE (9,*) 'Mean time to recombination event during NS sweeps= ',SNSE5(isel1)
	WRITE (9,*) 'NS contribution from single rec. event during NS sweeps ',SNSE6(isel1)
	WRITE (9,*) 'Net mean time to coalescence during NS sweeps= ',SNSE7(isel1)
	WRITE (9,*) ''
c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	do 150 isite=1,nbp
	X2a(isite,isel1)=adrate1a(isel1)*X2(isite)
c	probabilities of recombination events (Pr)

	X3a(isite,isel1)=adrate1a(isel1)*X3(isite)+adrate1a(isel1)*PNCS(isel1)*X1(isite)*Tda(isel1)
c	net coalescent times for sweeps (Ts)

	X5a(isite,isel1)=adrate1a(isel1)*X5(isite)
c	times to recombination events (Tr) 

	X6a(isite,isel1)=adrate1a(isel1)*X6(isite)
c	probabilities of single recombination events (Prs)e
150	continue
c	finishes calculating variables for each synonymous site 

410 	continue 
c	finishes calculating variables for each class of NS site 

c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	WRITE (1,*) ''
	WRITE (1,*) 'Diversity statistics summed over all classes of NS site'
	WRITE (1,*) ''
	B11=1.0/B1
	STE1=SNSE1S
	pirele1=1.0/(B11+STE1)
	pirele1=1.0-pirele1
	WRITE (1,*) 'Standard approx. reduction in diversity diversity (uncorrected) = ',pirele1
	WRITE (1,*) ''
	WRITE (9,*) 'Standard approx. reduction in diversity (uncorrected) = ',pirele1
	WRITE (9,*) ''	
	
	TSE=SNSE3S/xrate
	WRITE (1,*) 'Uncorrected mean coalescent time during sweep= ',TSE
	WRITE (1,*) ''
	WRITE (9,*) 'Uncorrected mean coalescent time during sweep= ',TSE
	WRITE (9,*) ''
	
	TSE=TSE+(STd1S/xrate)
c	net contribution to coalescent time from a sweep
	
	WRITE (1,*) 'Net mean coalescent time for sweep= ',TSE
	WRITE (1,*) ''	
	
	call sswncorr(xrate,TSE,AIE,B1,STE1,pirele2)

	pirele2=1-pirele2
	WRITE (1,*) 'Corrected standard approx. reduction in diversity= ',pirele2
	WRITE (1,*) ''
	WRITE (9,*) 'Corrected standard approx. reduction in diversity= ',pirele2
	WRITE (9,*) ''
	WRITE (1,*) 'Net mean coalescent time for sweep= ',TSE
	WRITE (1,*) ''	
	
	TSE12=SNSE5S/xrate

	WRITE (1,*) 'Mean time to recombination event= ',TSE12
	WRITE (1,*) ''

	STE2=SNSE2S
c	net contribution from prob. recombination during sweep (weighted by numbers of sites and rates per site)

	Pr=STE2/xrate
	WRITE (1,*) 'Overall probability of  recombination event= ',Pr
	WRITE (1,*) ''
	WRITE (1,*) 'Net mean coalescent time for sweep= ',TSE
	WRITE (1,*) ''

	TSE2=SNSE3S+STd1S
c	expected net time to sweep coalescence weighted by number of sites and rate of sweeps

	pirele11=1.0/(B11+(1-Pr)*xrate)
	pirele11=1.0-pirele11
c	modified reduction in variability from Kim-Stephan formula

	WRITE (1,*) 'Modified Kim-Stephan approx. reduction in diversity= ',pirele11
	WRITE (1,*) ''
	
	STE3=SNSE6S
c	net contribution from prob. of single rec. event
	
	call sswncorr6(adrate1bS,B1,Pr,pirel0,pirel1,pirel2,AIE,TSE)
	
	pirel2=1.0-pirel2
	pirel1=1.0-pirel1
	pirel0=1.0-pirel0
	WRITE (1,*) 'Corrections using new method: C1 approximation'
	WRITE (1,*) 'Corrected reduction in diversity (pooled value)= ',pirel2
	WRITE (1,*) 'Pre-sweep reduction in diversity= ',pirel1
	WRITE (1,*) 'Post-sweep reduction in diversity= ',pirel0
	WRITE (1,*) ''
		      
	call sswncorr4(adrate1b,adrate1bS,B1,Tda,SNSE7,SNSE5,SNSE2,SNSE6,pirel0,pirel1,pirel2,AIE,nselsit)
	
	pirel2=1.0-pirel2
	pirel1=1.0-pirel1
	pirel0=1.0-pirel0 
	WRITE (1,*) 'Corrections using new method: C2 approximation'
	WRITE (1,*) 'Corrected reduction in diversity (pooled value)= ',pirel2
	WRITE (9,*) 'Corrected reduction in diversity (pooled value)= ',pirel2
	WRITE (1,*) 'Pre-sweep reduction in diversity= ',pirel1
	WRITE (9,*) 'Pre-sweep reduction in diversity= ',pirel1
	WRITE (1,*) 'Post-sweep reduction in diversity= ',pirel0
	WRITE (9,*) 'Post-sweep reduction in diversity ',pirel0
	WRITE (1,*) ''
	
	pswt=0.0
	do 300 isw=1,nselsit
	psw(isw)=1-exp(0.0-Tda(isw)*adrate1b(isw))
	psw(isw)=psw(isw)*adrate1b(isw)/adrate1bS
	write(1,*) 'i= ',isw, 'Probability of inclusion in type i sweep= ',psw(isw) 
300	pswt=pswt+psw(isw)
c	net probability of being included in a sweep

	pirelm=0.5*(pirel1+pirel0)
	pirel3=((1.0-pswt)*pirel2)+pswt*pirelm
	WRITE (1,*) ''
	WRITE (1,*) 'Mean diversity reduction, corrected for within-sweep sampling= ',pirel3
			
c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	WRITE (1,*) ''
	WRITE (1,*) 'Results with new method: means over synonymous sites from C2 approx.'

	call sswncorr5(adrate1b,adrate1bS,B1,Tda,X3a,X5a,X2a,X6a,AIE,pirelm0,pirelm1,pirelm2,pirelsd2,nsyn,icode,nselsit)
				
	pirelm2=1.0-pirelm2
	WRITE (1,*) 'Corrected mean reduction in diversity per site= ',pirelm2
	WRITE (1,*) 'Standard deviation= ',pirelsd2
	pirelm1=1.0-pirelm1
	WRITE (1,*) 'Corrected pre-sweep reduction in diversity per site= ',pirelm1
	pirelm0=1.0-pirelm0
	WRITE (1,*) 'Corrected post-sweep reduction in diversity per site= ',pirelm0
	WRITE (1,*) ''
	pirelm=0.5*(pirelm1+pirelm0)
	pirelm3=((1.0-pswt)*pirelm2)+pswt*pirelm
	WRITE (1,*) 'Mean diversity reduction, corrected for within-sweep sampling= ',pirelm3
	WRITE (1,*) ''
	WRITE (1,*) ''
	WRITE(9,*) 'End of calculations for current crossing over rate'
	WRITE(9,*) ''
100	continue
	
200	END
c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx	
	
	subroutine sitecode(lex,lint,nex,icode)
c	codes each bp as nonsyn (1), syn (2) or int (3)
		
	integer lex,lint,nex,icoord,icode(5000)
c 	lex is length of exon (in codons), lint is length of introns (in bp), nex is number of exons

c	codes each bp as nonsyn (1), syn (2) or int (3)
		
	icoord=0
	i=0	
10 	i=i+1
	if(i.eq.1) go to 30
	if(lint.eq.0) go to 30
	
	do 20 k=1,lint
	icoord=icoord+1
	icode(icoord)=3
20	continue
c 	codes intronic sites

30	do 40 ic=1,lex
	do 50 j=1,3
	icoord=icoord+1

	if(j.eq.3) then
	icode(icoord)=2
c	codes synonymous sites
	else
	icode(icoord)=1
c	codes nonsynonymous sites	
	end if
	
50 	continue
40	continue

	if(i.eq.nex) go to 100
	go to 10		

100	return
	end

c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	subroutine sweepn(gamm,rec3,SN1,SN2,SN3,SN4,SN5,SN6,Efunc1,Efunc2,Efunc3,Efunc4,Efunc5,Efunc6,B,C,Td,PNC,NE1,icode,nsyn)	
c 	summation version of sweep equations for nonsynomyous sites

	real gamm,rg,dg,Efunc1(5000),Efunc2(5000),Efunc3(5000),Efunc4(5000),Efunc5(5000),Efunc6(5000)
	real rec,rec1,rec3,B,C,SN1,SN2,SN3,SN4,SN5,SN6,Td,PNC,recp,recps,TS11,TW,TS2,PNR,NE1,rho1
	
	integer icode(5000),nsyn
c 	lex is length of exon (in codons), lint is length of introns (in bp)

	common nsimp,h,F1,g,dg,lint,nbp,ithin,lex
	
	rg=g*dg
	rec1=rec3
c	stores crossing over rate per bp

c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
c	this section calculates the sweep function for each synonymous site for a given gamma value

	nsyn=0
	indint=0
	ind2=0
	jint=0
	Back1=0.0
	Back2=0.0
	Back3=0.0
	Back4=0.0
	Back5=0.0
	Back6=0.0
	
	do 150 i2=1,nbp
	Efunc1(i2)=0.0
	Efunc2(i2)=0.0
	Efunc3(i2)=0.0
	Efunc4(i2)=0.0
	Efunc5(i2)=0.0
150	Efunc6(i2)=0.0
	i1=0
155	i1=i1+1
	if(i1.gt.nbp) go to 135
            if(icode(i1).eq.3) then 
	    indint=indint+1
c	basepair is in intron
	    jint=3*indint*lex+(indint-1)*lint
c	number of bp at start of the intron
	    i1=lint+jint+3
c	changes i1 to number of 3rd site outside the intron
	write(9,*) 'jint= ',jint,' indint= ',indint,' i1= ',i1
	    ind2=1
	    go to 158
	    end if
c	skips the intron	    

	if(icode(i1).eq.2) then
c	synonymous site is picked
           if(ind2.eq.0) then
	   ind2=1
	   else
	   i1=i1+(ithin-1)*3
	   if(i1.gt.nbp) go to 135
	        if(icode(i1).eq.3) then 
	        indint=indint+1
c	basepair is in intron
	         jint=3*indint*lex+(indint-1)*lint
c	number of bp at start of the intron
	   	 i1=lint+jint+3
c	changes i1 to 1st site outside the intron
x	write(9,*) 'jint= ',jint,' indint= ',indint,' i1= ',i1
	         go to 158
		 end if
c	skips to next chosen synonymous site
	   end if
158	nsyn=nsyn+1
c	counts sites that are retained
	else
	go to 155
	end if
	
	i2=i1-1
	do 120 j2=1,i2
c	takes all sites to left of chosen site
	   if(icode(j2).eq.1) then
c	nonsynonymous site is chosen
	dist=i1-j2
	rec=(dist*rec1)+2.0*rg*(1-exp(0.0-dist/dg))
c	recombination rate with xovers and gene conversion

	rho1=2*NE1*rec
c	scaled recombination rate
x	write(9,*) 'rho= ',rho1,' NE= ',NE1
	call sweff(rho1,gamm,B,C,Td,PNR,TS2,TS11,TW,recp,recps)
x	write(9,*) 'NS: bps= ',i1,j2,' rec=',rec,' PNR= ',PNR,'TS2= ',TS2,'TS11= ',TS11,'TW= ',TW
x	write (9,*) ' recp= ',recp,' recps= ',recps 
x	pause
c	calculates sweep contribution from chosen nonsyn site

	Efunc1(i1)=Efunc1(i1)+PNR
c	updates sum of Barton sweep function for chosen syn site
	Efunc2(i1)=Efunc2(i1)+recp
c	updates sum of prob. of recombination during sweep 
	Efunc3(i1)=Efunc3(i1)+TS2
c	updates sum of time to coalescence within sweep
	Efunc4(i1)=Efunc4(i1)+TS11
c	updates sum of additional time to coalescence
	Efunc5(i1)=Efunc5(i1)+TSW
c	updates sum of time to recombination event
	Efunc6(i1)=Efunc6(i1)+recps
c	updates sum of prob. of single rec. event 

	   end if
120 	continue

	i3=i1+1
	do 130 j3=i3,nbp
c	takes all sites to right of chosen site
	    if(icode(j3).eq.1) then
c	nonsynonymous site is chosen
	dist=j3-i1
	rec=(dist*rec1)+2.0*rg*(1-exp(0.0-dist/dg))
c	recombination rate with xovers and gene conversion
	
	rho1=2*NE1*rec
x	write(9,*) 'rho= ',rho1,' NE= ',NE1
	call sweff(rho1,gamm,B,C,Td,PNR,TS2,TS11,TW,recp,recps)
x	write(9,*) 'NS: bps= ',i1,j3,' rec=',rec,' PNR= ',PNR,'TS2= ',TS2,'TS11= ',TS11,'TW= ',TW
x	write (9,*) ' recp= ',recp,' recps= ',recps
x	pause
	
	Efunc1(i1)=Efunc1(i1)+PNR
c	updates sum of Barton sweep function for chosen syn site
	Efunc2(i1)=Efunc2(i1)+recp
c	updates sum of prob. of recombination during sweep 
	Efunc3(i1)=Efunc3(i1)+TS2
c	updates sum of time to coalescence within sweep
	Efunc4(i1)=Efunc4(i1)+TS11
c	updates sum of additional time to coalescence 
	Efunc5(i1)=Efunc5(i1)+TW
c	updates sum of time to recombination event
	Efunc6(i1)=Efunc6(i1)+recps
c	updates sum of prob. of single rec. event 
	     end if
130 	continue

110	go to 155
	
135	do 140 k=1,nbp
	  if(icode(k).eq.2) then
	Back1=Back1+Efunc1(k)
	Back2=Back2+Efunc2(k)	
	Back3=Back3+Efunc3(k)
	Back4=Back4+Efunc4(k)
	Back5=Back5+Efunc5(k)
	Back6=Back6+Efunc6(k)
	  end if
140 	continue
c  	accumulates sum of effects along gene
	asyn=nsyn
	SN1=Back1/asyn
	SN2=Back2/asyn
	SN3=Back3/asyn
	SN4=Back4/asyn
	SN5=Back5/asyn
	SN6=Back5/asyn
c   	takes means over all synonymous sites
	
	write(9,*) 'PNR= ',SN1,' recp= ',SN2,' TS2= ',SN3,' TS1= ',SN4
	write(9,*) ''
	write(1,*) 'Number of synonymous sites retained for analyses= ',nsyn
	write(1,*) 'Net values of variables  of interest'
	write(1,*) 'PNR= ',SN1,' recp= ',SN2,' TS2= ',SN3,' TS11= ',SN4,' TW= ',SN5,' recps= ',SN6
	write(1,*) ''
x	pause
	
	return
	end
c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	subroutine sswncorr(adrate1,TS,AI,B,ST,pirel)
c  	calculates CC correction for effect of sweep duration on relative diversity
c 	includes neutral BGS effect (B=B1 in Campos & Charlesworth 2019)

	real adrate1,TS,ST,pirel,AI,B
	
	B1=1.0/B
	A=adrate1/(B1+adrate1)
	EM=ST/adrate1
	
x	write(9,*) ''
x	write(9,*) 'Mean effect per sweep= ',EM,' A= ',A	
		
	pirel=(1-AI*EM+TS*AI*EM-A*(1-EM))/(1.0-A*(1-EM))
	pirel=B*pirel
	
	return
	end
c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	subroutine sswncorr4(adrate1b,adrate1,B,Td1,TS1,TW1,Pr1,Prs1,pirel0,pirel1,pirel2,AIE,nselsit)
c  	new method for calculating sweep duration effect on relative diversity; C2 approximation
c	gives pooled results
c 	includes neutral BGS effect (B=B1 in Campos & Charlesworth 2019)

	real adrate1b(50),adrate1,B,Td1(50),TS1(50),TW1(50),Pr1(50),Prs1(50),pirel0,pirel1,pirel2,AIE,fsw
	integer nselsit

x	write(9,*) 'Inside sswncorr4'
x	write(9,*) 'adrate1=',adrate1
	
	B1=1.0/B
	A=adrate1/(B1+adrate1)	
	C1=0.0
	C2=0.0
	
	do 10 isel=1,nselsit
	fsw=adrate1b(isel)/adrate1
c	proportion of sweeps due to isel class of NS mutation
	
	Pr11=Pr1(isel)/adrate1b(isel)
	Prs11=Prs1(isel)/adrate1b(isel)
c	probs. of recombination and single recombination events per sweep
	
x	write(9,*) 'Gamma index= ',isel
x	write(9,*) 'Pr1 ',Pr11,' Prs1',Prs11
	E1=exp(0.0-B1*(Td1(isel)-TW1(isel)))
c	recovery factors for each type of sweep
x	write(9,*) 'E1 ',E1

	C11=(Pr11-Prs11)*E1+Prs11
	C1=C1+fsw*C11
	
	C21=(B*(Pr11-Prs11)*(1-E1)+(Pr11-Prs11)*TW1(isel)+Prs11*Td1(isel)+TS1(isel))*B1
	C2=C2+fsw*C21
	
x	write(9,*) 'fsw',fsw
x	write(9,*) 'C1',C1
x	write(9,*) 'A & AIE ',A,AIE

10	continue

	pirel0=C1*(1-A)+C2*B1
	pirel0=pirel0/(1-A*C1)
	pirel1=pirel0*A+1-A
	pirel2=1-(1-pirel0)*AIE
c	these are values relative to (neutrality x B)
	pirel0=B*pirel0
	pirel1=B*pirel1
	pirel2=B*pirel2
c	these are values relative to neutrality

	return
	end
c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	subroutine sswncorr5(adrate1b,adrate,B,Td1,X3,X5,X2,X6,AIE,pirelm0,pirelm1,pirelm2,pirelsd2,nsyn,icode,nselsit)
c  	new method for calculating sweep duration effect on relative diversity for individual syn sites: C2 approx.
c 	includes neutral BGS effect (B=B1 in Campos & Charlesworth 2019)

	real adrate1b(50),adrate,AIE,B,pirelm0,pirelsd0,pirelm1,pirelsd1,pirelm2,pirelsd2
	real pirel10(5000),pirel11(5000),pirel12(5000),fsw(50)
	real X2(5000,50),X3(5000,50),X5(5000,50),X6(5000,50),Td1(50)
	integer nsyn,icode(5000),nselsit
	
	common nsimp,h,F1,g,dg,lint,nbp,ithin,lex
	
x	write(9,*) 'Calculations within swwncorr5'
x	write(9,*) ''
x	write(1,*) ''
	write(1,*) 'Statistics for each synonymous site that was analysed'
	
	do 10 i1=1,nbp
	pirel10(i1)=0.0
	pirel11(i1)=0.0
	pirel12(i1)=0.0
	pirels0=0.0
	pirels1=0.0
	pirels2=0.0
	pirelss0=0.0
	pirelss1=0.0
10	pirelss2=0.0

	do 100 isel1=1,nselsit 
100	fsw(isel1)=adrate1b(isel1)/adrate
c	frequency of isel1 class of sweep


	B1=1.0/B
	A=adrate/(B1+adrate)
x	write(9,*) 'B= ',B,' A= ',A
		
		do 20 i2=1,nbp
		if(icode(i2).eq.2) then
	C1=0
	C2=0
	do 110 isel=1,nselsit
		    if(X2(i2,isel).le.0.000001) go to 20
c	skips syn. sites that were not included in the modelled set

	Pr1=X2(i2,isel)/adrate1b(isel)
	Prs1=X6(i2,isel)/adrate1b(isel)
c	probs. of recombination and single recombination events per sweep

x	write(9,*) 'Pr1,Prs1= ',Pr1,Prs1 
	TS1=X3(i2,isel)
	TW1=X5(i2,isel)
x	write(9,*) 'TS1= ',TS1
x	write(9,*) 'TW1= ',TW1
	E1=exp(0.0-B1*(Td1(isel)-TW1))
c	recovery factor for each type of sweep
x	write(9,*) 'E1',E1

	C11=(Pr1-Prs1)*E1+Prs1
	C1=C1+fsw(isel)*C11
	
	C21=(B*(Pr1-Prs1)*(1-E1)+(Pr1-Prs1)*TW1+Prs1*Td1(isel)+TS1)*B1
	C2=C2+fsw(isel)*C21
	
110 	continue

	pirel10(i2)=C1*(1-A)+C2*B1
	pirel10(i2)=pirel10(i2)/(1-A*C1)
	pirel11(i2)=pirel10(i2)*A+1-A
	pirel12(i2)=1.0-(1.0-pirel10(i2))*AIE
c	these are values relative to (neutrality x B)

	pirel10(i2)=B*pirel10(i2)
	pirel11(i2)=B*pirel11(i2)
	pirel12(i2)=B*pirel12(i2)
c	these are values relative to neutrality

	write(1,*) 'site ',i2,' Post-sweep pirel=',pirel10(i2),' Pre-sweep pirel= ',pirel11(i2),' Exp. pirel= ',pirel12(i2)
x	write(9,*) 'site ',i2,' Post-sweep pirel=',pirel10(i2),' Pre-sweep pirel= ',pirel11(i2),' Exp. pirel= ',pirel12(i2)
x	pause
	
	
15	pirels0=pirels0+pirel10(i2)
	pirels1=pirels1+pirel11(i2)
	pirels2=pirels2+pirel12(i2)
	pirelss0=pirelss0+pirel10(i2)**2
	pirelss1=pirelss1+pirel11(i2)**2
	pirelss2=pirelss2+pirel12(i2)**2	
	end if
20	continue

	ansyn=nsyn
	pirelm0=pirels0/ansyn
	pirelv0=(pirelss0-((pirels0**2)/ansyn))/(ansyn-1)
	pirelsd0=sqrt(pirelv0)
	pirelm1=pirels1/ansyn
	pirelv1=(pirelss1-((pirels1**2)/ansyn))/(ansyn-1)
	pirelsd1=sqrt(pirelv1)
	pirelm2=pirels2/ansyn
	pirelv2=(pirelss2-((pirels2**2)/ansyn))/(ansyn-1)
	pirelsd2=sqrt(pirelv2)
	write(1,*) ''
	
	return
	end
c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	
	subroutine sswncorr6(adrate,B,Pr,pirel0,pirel1,pirel2,AIE,TSE)
c  	new method for calculating sweep duration effect on relative diversity: C1 approx.
c 	includes neutral BGS effect (B=B1 in Campos & Charlesworth 2019)

	real adrate,B,Pr,pirel0,pirel1,pirel2,AIE,TSE
	
	B1=1.0/B
	A1=adrate/(B1+adrate)
	
x	write(9,*) 'sswncorr6 calculations'
x	write(9,*) 'Pr',Pr,' B ',B,' adrate ',adrate,' TSE ',TSE
x	pause
		
	pirel0=Pr*(B-A1)+TSE
	pirel0=pirel0/(1.0-A1*Pr)
	pirel1=B*(1.0-(1.0-pirel0*B1)*A1)
	pirel2=B*(1.0-(1.0-pirel0*B1)*AIE)
c	these are values relative to neutrality

	return
	end
c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

	subroutine series(nmax,omega,S,B)
c	series for mean deviation of relative pi over recovery period
c       sum of terms in expansion of exp(-xt)[1 - exp(-t)]/t around omega=1

	real S,B,ai,x,omega,c
	integer i,nmax
	
	S=0.6931
	x=omega*B-1.0
	k=1 
	
	do 10 i=1,nmax
	ai=i
	c=0.0-(1.0-(0.5**i))*(x**i)/ai
	
	S=S+k*c
	k=0-k
	del=abs(c/S)
	
	if(del.le.0.000001) then
	write(1,*)'Series has converged'
	write(1,*) 'i = ',i,' c= ',c,' S= ',S
	write(9,*) 'i = ',i,' c= ',c,' S= ',S
x	pause
	
	go to 15
	else
x	write(9,*) 'i = ',i,' c= ',c,' S= ',S
x	write(1,*) 'i = ',i,' c= ',c,' S= ',S
	end if		
	
10	continue
	
15	return
	end
c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
	
	subroutine sweff(rho,gam0,B,C,Td,PNR,TS,TS11,TW,recp,recps)
c	subroutine to calculate sweep effect for mutations with intermediate dominance
c	autosomal inheritance with inbreeding
	
	real a,b,rho,gam0,B,C,TS,q1,q2,Td,PNR,recp,TS11,recps,TW
	common nsimp,h,F1
	
	a=F1+(1.0-F1)*h
	b=(1.0-F1)*(1-2.0*h)
c	selection parameters with inbreeding

	B2=B*C

	pf1=2*a*gam0*B2/(1-exp(0.0-2*a*gam0*B2))
	pf2=2*(a+b)*gam0*B2/(1-exp(0.0-2*(a+b)*gam0*B2))
	
	q1=1.0/pf1
	p1=1-q1
	p2=1.0/pf2
	q2=1-p2	
c	approximate conditional initial and final frequencies'
	
	c=a+b*q1
	d=a+b
	e=a+b*q2	
	
	if(rho.le.0.001) then
	PNR=1.0
	else
	B1=log(q2)+log(c)-log(q1)-log(e)
	B1=2*rho*B1/(a*gam0)
	PNR=exp(0.0-B1)
	end if
c	probability of no rec during sweep in absence of coalescence

	call integ1(TS,recp,TR,recps,q1,q2,gam0,B,a,b,rho)
c	TS is mean coalescence time during sweep
c	recp is probability of recombination during sweep
c	recps is probability of single recombination during sweep

	TW=TR/recp
c	TW is mean time to recombination during sweep, conditioned on rec.

	if(rho.le.0.001) then
	recp=0.0
	recps=0.0
	TR=0.0
	end if
	
	TS11=recps*Td
c	corrected additional coalescent time for single rec. allele (time to reach sweep start)

x	write(9,*) 'Inside sweff: a= ',a,' b= ',b,' h= ',h,' F= ',F1
x	write(9,*) 'rho= ',rho,' PNR= ',PNR,' recp=',recp,'recps= ',recps,' TS= ',TS,' TS11= ',TS11,'TW= ',TW
x	write(9,*) ''
x	pause

	return
20	end
c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

		subroutine recterm1(gam,x1,x2,a,b,recorr)
c		calulates recombination factor A2>A1 for given A2 frequency x

		real a,b,gam,x1,x2,recorr
		common nsimp,h,F1
				
		c=a+b*x1
		e=a+b*x2
		
		f1=log(x2)+log(c)-log(x1)-log(e)				
		recorr=f1/(a*gam)
		
		return 
		end
c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
		
		subroutine recterm2(gam,x1,x2,a,b,recorr)
c		calulates recombination factor A1>A2 for given A2 frequency x2
		
		real a,b,gam,x1,x2,recorr
		common nsimp,h,F1
		
		y1=1.0-x1		
		y2=1.0-x2	
		c=a+b*x2
		f=a+b*x1
		d=a+b
		
		f1=log(y1)+log(c)-log(y2)-log(f)		
		recorr=f1/(d*gam)

		return 
		end
c      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx	
		
		subroutine integ1(ainteg1,ainteg2,ainteg3,ainteg4,q1,q2,gam,B,a,b,rho)
c		uses Simpson's rule
c		integrals for coalescent time, rec. prob. and time to recombination.

		real gam,B,ainteg1,ainteg2,ainteg3,ainteg4,q1,q2,a,b,rho,recorr1,recorr2,recorr3
		common nsimp,h,F1
	
		p1=1.0-q1
		p2=1.0-q2
		
		d=a+b
		e=a+b*q2
		
		ainteg1=0.0
		ainteg2=0.0
		ans=nsimp
		DX=(q2-q1)/ans
		j=0
		N1=nsimp+1
		
		do 50 i=1,N1
		
		x=q1+(i-1)*DX
		y=1.0-x
c		x is frequency of favourable allele
		c=a+b*x
			
		delxi1=1.0/(x*y*c)
c		inverse of selection equation without gamma and B factors

		delxi2=1.0/(x*c)
c		inverse of selection equation without 1-x and gamma factors
	
		if(i.eq.N1) then
		G=0.0
		PNC=1.0
		PNR=1.0
		go to 40
		else
		G=(log(q2)+log(c)-log(x)-log(e))/a
		G=G+(log(y)+log(e)-log(p2)-log(c))/d
		end if
c		time from q2 as function of favourable allele frequency without gamma factor

		A=((1.0/x)-(1.0/q2))+(b/a)*(log(x)+log(e)-log(c)-log(q2))
		A=A/a
		A=(A+G)/(B*gam)
		PNC=exp(0.0-A)
c		probability of no coalescence by frequency x
		
		if(rho.le.0.001) then
		PNR1=1.0
		PNR2=1.0
		else
		
		call recterm1(gam,x,q2,a,b,recorr1)
		B1=2*rho*recorr1

		PNR1=exp(0.0-B1)
c		probability of no recombination by frequency x
		
		call recterm2(gam,q1,x,a,b,recorr2)
		B2=rho*recorr2
c		factor for prob. of no extra A1>A2 recombination
		
		call recterm1(gam,q1,x,a,b,recorr3)
		B3=rho*recorr3
c		factor for prob. of no extra A2>A1 recombination

		PNR2=exp(0.0-B2-B3)
c		probability of no additional recombination by frequency q1
x		write(9,*) 'x ',x,' q1',q1
x		write(9,*) 'B1,B2,B3 ',B1,B2,B3
x		write(9,*) 'PNR1,2',PNR1,PNR2
x		pause
		
		end if

40		if(i.eq.N1) then
		F11=0.0
		F12=0.0
		F13=0.0
		F14=0.0
		else
		
		F11=delxi1*G*PNC*PNR1/(B*gam*x)
c		integrand for coalescence time during sweep

		F12=2*rho*delxi2*PNC*PNR1
c		integrand for prob. of  recombination during sweep

		F13=F12*G/gam
c		integrand for time to recombination during sweep

		F14=F12*PNR2
c		integrand for prob. of single recombination during sweep

		end if
		
		if(i.eq.1) then
		ainteg1=F11
		ainteg2=F12
		ainteg3=F13
		ainteg4=F14
		go to 50
		end if 
			if(j.eq.0) then
			ainteg1=ainteg1+4*F11
			ainteg2=ainteg2+4*F12
			ainteg3=ainteg3+4*F13
			ainteg4=ainteg4+4*F14
			j=1
			else
			ainteg1=ainteg1+2*F11
			ainteg2=ainteg2+2*F12
			ainteg3=ainteg3+2*F13
			ainteg4=ainteg4+2*F14
			j=0
			end if	
50		continue

		ainteg1=DX*ainteg1/(3*gam)
		ainteg2=DX*ainteg2/(3*gam)
		ainteg3=DX*ainteg3/(3*gam)
		ainteg4=DX*ainteg4/(3*gam)

x		WRITE(1,*) 'Integral for coal. time during sweep= ',ainteg1
x		WRITE(9,*) 'Integral for coal. time during sweep= ',ainteg1
x		WRITE(1,*) ''
x		WRITE(9,*) ''
x		WRITE(1,*) 'Integral for rec. during sweep= ',ainteg2
x		WRITE(9,*) 'Integral for rec. during sweep= ',ainteg2
x		WRITE(1,*) ''
x		WRITE(9,*) ''
x		WRITE(1,*) 'Integral for rec. time during sweep= ',ainteg3
x		WRITE(9,*) 'Integral for rec. time  during sweep= ',ainteg3
x		WRITE(1,*) ''
x		WRITE(9,*) ''
x		WRITE(1,*) 'Integral for single rec. during sweep= ',ainteg4
x		WRITE(9,*) 'Integral for single rec. during sweep= ',ainteg4
x		pause

		return
		end
